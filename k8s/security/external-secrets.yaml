apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: gcp-secret-manager
  namespace: crm-system
spec:
  provider:
    gcpsm:
      projectId: "your-project-id"
      auth:
        workloadIdentity:
          clusterLocation: "us-central1"
          clusterName: "crm-cluster"
          serviceAccountRef:
            name: external-secrets-sa

---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: vault-backend
  namespace: crm-system
spec:
  provider:
    vault:
      server: "https://vault.yourcompany.com"
      path: "secret"
      version: "v2"
      auth:
        kubernetes:
          mountPath: "kubernetes"
          role: "crm-role"
          serviceAccountRef:
            name: vault-auth

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: crm-app-secrets
  namespace: crm-system
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: gcp-secret-manager
    kind: SecretStore
  target:
    name: crm-secrets
    creationPolicy: Owner
    template:
      type: Opaque
      engineVersion: v2
      data:
        SESSION_SECRET: "{{ .sessionSecret | toString }}"
        JWT_SECRET: "{{ .jwtSecret | toString }}"
        ENCRYPTION_KEY: "{{ .encryptionKey | toString }}"
  data:
  - secretKey: sessionSecret
    remoteRef:
      key: "crm-app-session-secret"
  - secretKey: jwtSecret
    remoteRef:
      key: "crm-app-jwt-secret"  
  - secretKey: encryptionKey
    remoteRef:
      key: "crm-app-encryption-key"

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: database-secrets
  namespace: crm-system
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: gcp-secret-manager
    kind: SecretStore
  target:
    name: postgres-secrets
    creationPolicy: Owner
    template:
      type: Opaque
      engineVersion: v2
      data:
        POSTGRES_PASSWORD: "{{ .postgresPassword | toString }}"
        DATABASE_URL: "postgres://{{ .postgresUser | toString }}:{{ .postgresPassword | toString }}@{{ .postgresHost | toString }}:5432/{{ .postgresDatabase | toString }}"
  data:
  - secretKey: postgresUser
    remoteRef:
      key: "postgres-user"
  - secretKey: postgresPassword
    remoteRef:
      key: "postgres-password"
  - secretKey: postgresHost
    remoteRef:
      key: "postgres-host"
  - secretKey: postgresDatabase
    remoteRef:
      key: "postgres-database"

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: monitoring-secrets
  namespace: crm-monitoring
spec:
  refreshInterval: 30s
  secretStoreRef:
    name: gcp-secret-manager
    kind: SecretStore
  target:
    name: monitoring-secrets
    creationPolicy: Owner
  data:
  - secretKey: slack_webhook_url
    remoteRef:
      key: "slack-webhook-url"
  - secretKey: pagerduty_service_key
    remoteRef:
      key: "pagerduty-service-key"
  - secretKey: grafana_admin_password
    remoteRef:
      key: "grafana-admin-password"

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets-sa
  namespace: crm-system
  annotations:
    iam.gke.io/gcp-service-account: external-secrets@your-project-id.iam.gserviceaccount.com

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault-auth
  namespace: crm-system